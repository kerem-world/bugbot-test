name: Reopen PRs under codereview-feraset

on:
  # Secrets needed; this workflow does NOT check out PR code.
  pull_request_target:
    types: [opened]

jobs:
  reauthor:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    env:
      REPO: ${{ github.repository }}
      OWNER: ${{ github.repository_owner }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
      PR_AUTHOR: ${{ github.event.pull_request.user.login }}
      HEAD_REF: ${{ github.event.pull_request.head.ref }}
      BASE_REF: ${{ github.event.pull_request.base.ref }}
      CR_PAT: ${{ secrets.CR_PAT }}   # Fine-grained PAT from codereview-feraset

    steps:
      - name: Verify secret present
        run: |
          if [ -z "${CR_PAT:-}" ]; then
            echo "::error::CR_PAT is empty. Add it under Settings > Secrets and variables > Actions."
            exit 1
          fi

      - name: Exit if already authored by codereview-feraset
        if: env.PR_AUTHOR == 'codereview-feraset'
        run: echo "Already authored by codereview-feraset. Nothing to do."

      - name: Install jq (for debug)
        if: env.PR_AUTHOR != 'codereview-feraset'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Debug - list existing PRs for head branch
        if: env.PR_AUTHOR != 'codereview-feraset'
        run: |
          echo "Checking existing PRs for head=${OWNER}:${HEAD_REF}"
          resp=$(curl -sS \
            -H "Authorization: token ${CR_PAT}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${REPO}/pulls?state=all&head=${OWNER}:${HEAD_REF}")
          echo "RAW RESPONSE:"; echo "$resp"
          echo "$resp" | jq 'if type=="array" then .[] | {number, state, head:.head.ref, base:.base.ref} else . end' || true

      - name: Close original PR
        if: env.PR_AUTHOR != 'codereview-feraset'
        run: |
          echo "Closing original PR #${PR_NUMBER} by ${PR_AUTHOR}"
          http=$(curl -sS -o /tmp/close.json -w "%{http_code}" \
            -X PATCH \
            -H "Authorization: token ${CR_PAT}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${REPO}/issues/${PR_NUMBER}" \
            -d '{"state":"closed","state_reason":"completed"}')
          echo "HTTP_STATUS=$http"
          echo "RESPONSE:"; cat /tmp/close.json
          if [ "$http" -lt 200 ] || [ "$http" -ge 300 ]; then
            echo "::error::Failed to close PR ${PR_NUMBER} (HTTP $http)."
            exit 1
          fi

      - name: Create new PR as codereview-feraset (draft)
        if: env.PR_AUTHOR != 'codereview-feraset'
        run: |
          echo "Creating new PR: head=${HEAD_REF} -> base=${BASE_REF}"
          http=$(curl -sS -o /tmp/create_pr.json -w "%{http_code}" \
            -X POST \
            -H "Authorization: token ${CR_PAT}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${REPO}/pulls" \
            -d "{\"title\":\"Recreated PR\",\"body\":\"Auto-opened by codereview-feraset\",\"head\":\"${HEAD_REF}\",\"base\":\"${BASE_REF}\",\"draft\":true}")
          echo "HTTP_STATUS=$http"
          echo "RESPONSE:"; cat /tmp/create_pr.json
          if [ "$http" -lt 200 ] || [ "$http" -ge 300 ]; then
            echo "::error::PR create failed (HTTP $http). See response above."
            exit 1
          fi

          NEW_PR=$(jq -r '.number' /tmp/create_pr.json)
          if [ -z "$NEW_PR" ] || [ "$NEW_PR" = "null" ]; then
            echo "::error::No PR number in response. See response above."
            exit 1
          fi
          echo "NEW_PR=$NEW_PR" >> $GITHUB_ENV
          echo "Created PR #$NEW_PR"

      - name: Trigger Bugbot
        if: env.PR_AUTHOR != 'codereview-feraset'
        run: |
          echo "Commenting 'bugbot run' on PR #${NEW_PR}"
          http=$(curl -sS -o /tmp/comment.json -w "%{http_code}" \
            -X POST \
            -H "Authorization: token ${CR_PAT}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${REPO}/issues/${NEW_PR}/comments" \
            -d '{"body":"bugbot run"}')
          echo "HTTP_STATUS=$http"
          echo "RESPONSE:"; cat /tmp/comment.json
          if [ "$http" -lt 200 ] || [ "$http" -ge 300 ]; then
            echo "::error::Failed to add comment to PR ${NEW_PR} (HTTP $http)."
            exit 1
          fi

